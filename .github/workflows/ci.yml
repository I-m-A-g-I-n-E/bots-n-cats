name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Run smoke test
        run: node smoke-test.js

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: TypeScript check
        run: npx tsc --noEmit --project tsconfig.base.json

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Run security audit
        run: npm audit --audit-level=moderate

  build-matrix:
    name: Build Check (${{ matrix.package }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - audio-core
          - webhook-server
          - music-engine
          - cat-sounds
          - streaming-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build ${{ matrix.package }}
        run: npm run build -w @bots-n-cats/${{ matrix.package }}

      - name: Check build artifacts
        run: |
          if [ ! -d "packages/${{ matrix.package }}/dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "âœ… Build artifacts verified for ${{ matrix.package }}"
