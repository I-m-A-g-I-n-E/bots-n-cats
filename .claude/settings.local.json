{
  "permissions": {
    "allow": [
      "Bash(python3 -c \"import sys, json; data = json.load(sys.stdin); print(f\"\"Public URL: {data[''''tunnels''''][0][''''public_url'''']}\"\" if data.get(''''tunnels'''') else ''''No tunnels'''')\")",
      "Bash(git add packages/streaming-server/src/ packages/webhook-server/package.json)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix(streaming-server): Add ESM import extensions for Node.js compatibility\n\nFixed module resolution errors in streaming-server by adding .js extensions\nto all local imports. Node.js ESM requires explicit file extensions for \nrelative imports.\n\nChanges:\n- Added .js extensions to all local imports in src/ directory\n- Updated 7 TypeScript files (server, routes, services, utils)\n- Bumped tsx and nodemon versions for better ESM support\n\nESM Import Fixes:\n- server.ts: StreamingService, OfflineRenderer, SSEManager, routes\n- routes/stream.ts: StreamingService, SSEManager\n- routes/health.ts: StreamingService, SSEManager  \n- services/StreamingService.ts: OfflineRenderer, SSEManager, BufferSerializer, types\n- services/OfflineRenderer.ts: types\n- services/SSEManager.ts: types\n- utils/buffer-serializer.ts: types\n\nDependencies:\n- tsx: 4.7.0 â†’ 4.20.6\n- nodemon: 3.0.2 â†’ 3.1.10\n\nStreaming server now starts successfully with tsx runtime.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
